plugins {
    id("org.jetbrains.kotlin.jvm") version "1.6.21"
    id("org.jetbrains.kotlin.kapt") version "1.6.21"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.6.21"
}

version = "0.1"
group = "io.sunny.libs.kms"

apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            "org.bouncycastle:bcprov-jdk15on:$bouncyCastleVersion",
            "org.bouncycastle:bcpkix-jdk15on:$bouncyCastleVersion",
            "com.amazonaws:aws-java-sdk:$awsVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
    )
    testImplementation(
            "io.mockk:mockk:$mockkVersion",
            "io.kotlintest:kotlintest-runner-junit5:$junitVersion",
            "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
    )
    runtimeOnly("ch.qos.logback:logback-classic:$logbackVersion")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
}

test {
    useJUnitPlatform {
        includeEngines("junit-jupiter")
    }
    systemProperties = System.properties // so can pass -Dkotlintest.tags.include/exclude
    testLogging {
        events "passed", "skipped", "failed"
        if (project.hasProperty("output")) {
            // Run gradle with -Poutput to show standard out and error streams.
            showStandardStreams = true
        }
    }
}
